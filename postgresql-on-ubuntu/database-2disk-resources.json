{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commonSettings": {
      "type": "object"
    },
    "osSettings": {
      "type": "object"
    },
    "storageSettings": {
      "type": "object"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "machineSettings": {
      "type": "object"
    },
    "subnet": {
      "type": "object"
    },
    "replicatorPassword": {
      "type": "securestring"
    },
    "masterIpAddress": {
      "type": "string"
    },
    "dbType": {
      "type": "string"
    }
  },
  "variables": {
    "namespace": "[parameters('commonSettings').namespace]",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "storageAccountName": "[concat(parameters('storageSettings').name, variables('namespace'))]",
    "vmName": "[concat(variables('namespace'), 'vm')]",
    "nicName": "[concat(variables('namespace'), 'nic')]",
    "adminUsername": "[parameters('commonSettings').adminUsername]",
    "vmCount": "[parameters('machineSettings').vmCount]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(variables('vmName'), copyIndex(), '-dataDisk1')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "dataDisk1CopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties":
      {
        "creationData":
        {
          "createOption" : "Empty"
        }
      ,
        "accountType" : "Premium_LRS",
        "diskSizeGB": "[parameters('machineSettings').diskSize]"
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(variables('vmName'), copyIndex(), '-dataDisk2')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "dataDisk2CopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties":
      {
        "creationData":
        {
          "createOption" : "Empty"
        }
      ,
        "accountType" : "Premium_LRS",
        "diskSizeGB": "[parameters('machineSettings').diskSize]"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyindex())]",
        "[resourceId('Microsoft.Compute/disks', concat(variables('vmName'), copyIndex(), '-dataDisk1'))]",
        "[resourceId('Microsoft.Compute/disks', concat(variables('vmName'), copyIndex(), '-dataDisk2'))]"
      ],
      "copy": {
        "name": "vmCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('machineSettings').availabilitySet)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('machineSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyindex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "[concat(variables('vmName'), copyIndex(), '-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', concat(variables('vmName'), copyIndex(), '-dataDisk1'))]"
              },
              "caching": "None",
              "createOption": "Attach"
            },
            {
              "lun": 1,
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', concat(variables('vmName'), copyIndex(), '-dataDisk2'))]"
              },
              "caching": "None",
              "createOption": "Attach"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()) )]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyindex(), '/install_postgresql')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex())]"
      ],
      "copy": {
        "name": "scriptCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash install_postgresql.sh -m ', parameters('masterIpAddress'), ' -s ', parameters('subnet').prefix, ' -t ', parameters('dbType') , ' -p ', parameters('replicatorPassword') )]"
        }
      }
    }
  ],
  "outputs": {
    "masterip": {
      "value": "[reference(concat(variables('nicName'),0)).ipConfigurations[0].properties.privateIPAddress]",
      "type": "string"
    }
  }
}
